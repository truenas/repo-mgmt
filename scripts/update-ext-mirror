#!/bin/bash

APTLY="aptly -config $(pwd)/conf/aptly.conf"
 
update_mirror() {
	DIST="$1"
	MIRROR="$2"
	REPO="$3"
	MOPTS="$4"
	PREFIX="$5"
	COMPONENT="$6"
	FILTER="$7"
	if [ -n "$FILTER" ] ; then
		FOPTS="-filter=\"$FILTER\""
	else
		unset FOPTS
	fi

	SNAPDIST="${DIST}"
	if [ "$SNAPDIST" = "/" ] ; then
		SNAPDIST="bullseye"
	fi

	# Cleanup old published / snapshots
	${APTLY} publish drop ${SNAPDIST} filesystem:truenas:${PREFIX}
	${APTLY} snapshot drop ${MIRROR}-snapshot

	# Check if we need to init the mirror
	${APTLY} mirror list | grep -q -w "\[${MIRROR}\]"
	if [ $? -ne 0 ] ; then
		# Install the GPG key for this repo
		cat mirrors/$2.gpg | gpg --no-default-keyring --keyring trustedkeys.gpg --import
		# Create the repo fresh
		echo "${APTLY} mirror create ${MOPTS} ${FOPTS} ${MIRROR} ${REPO} ${DIST} ${COMPONENT}"
		${APTLY} mirror create ${MOPTS} ${FOPTS} ${MIRROR} ${REPO} ${DIST} ${COMPONENT}
		if [ $? -ne 0 ] ; then exit 1; fi
	fi

	# Update the mirror from upstream
	${APTLY} mirror update ${MIRROR}
	if [ $? -ne 0 ] ; then exit 1; fi

	# Create -snapshot snapshot
	${APTLY} snapshot create ${MIRROR}-snapshot from mirror ${MIRROR}
	if [ $? -ne 0 ] ; then exit 1; fi

	# Publish the mirror
	${APTLY} publish snapshot -distribution="${SNAPDIST}" -gpg-key=${GPGKEY} ${MIRROR}-snapshot filesystem:truenas:${PREFIX}
	if [ $? -ne 0 ] ; then exit 1; fi

}

# Ensure debmirror is installed
which aptly >/dev/null 2>/dev/null
if [ $? -ne 0 ] ; then
	echo "Missing 'aptly' utilty, please install with 'apt install aptly'"
	exit 1
fi

# Ensure that debian-keyring is installed
if [ ! -e "/usr/share/keyrings/debian-archive-keyring.gpg" ] ; then
	echo "Missing debian-keyring, please install with 'apt install debian-keyring'"
	exit 1
fi

if [ ! -e "mirrors/${1}.cfg" ] ; then
	echo "No such external mirror $1"
	exit 1
fi
URL=$(cat mirrors/${1}.cfg | grep URL= | cut -d '=' -f 2)
DIST=$(cat mirrors/${1}.cfg | grep DISTRIBUTION= | cut -d '=' -f 2)
COMPONENT=$(cat mirrors/${1}.cfg | grep COMPONENT= | cut -d '=' -f 2)
FILTER=$(cat mirrors/${1}.cfg | grep FILTER= | cut -d '=' -f 2-)

update_mirror "${DIST}" "$1" "${URL}" "" "unstable/${1}" "$COMPONENT" "$FILTER"
